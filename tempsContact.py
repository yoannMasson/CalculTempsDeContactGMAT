#Cr√©dit NathenGPT
from datetime import datetime

def obtenir_dernier_argument_et_date(tableau):
    # Divise le tableau en lignes
    lignes = tableau.strip().split('\n')

    # Garde la date et le dernier argument de chaque ligne
    valeurs_par_jour = {}
    for ligne in lignes:
        elements = ligne.split()
        date_str = " ".join(elements[:3])
        date = datetime.strptime(date_str, "%d %b %Y")
        valeur = float(elements[-1])

        if date in valeurs_par_jour:
            valeurs_par_jour[date].append(valeur)
        else:
            valeurs_par_jour[date] = [valeur]

    return valeurs_par_jour

# Exemple d'utilisation avec le tableau que tu as fourni
tableau_exemple = """
01 Jan 2024 11:59:28.000    01 Jan 2024 12:01:11.204      103.20420284    
01 Jan 2024 13:28:06.849    01 Jan 2024 13:36:32.845      505.99656174    
02 Jan 2024 01:03:50.153    02 Jan 2024 01:11:32.234      462.08022851    
02 Jan 2024 02:38:27.203    02 Jan 2024 02:46:29.228      482.02472089    
02 Jan 2024 11:51:06.902    02 Jan 2024 11:57:38.362      391.46024248    
02 Jan 2024 13:24:35.698    02 Jan 2024 13:33:08.124      512.42647556    
03 Jan 2024 01:00:27.970    03 Jan 2024 01:07:57.454      449.48371762    
03 Jan 2024 02:34:56.961    03 Jan 2024 02:43:07.845      490.88430810    
03 Jan 2024 11:47:50.037    03 Jan 2024 11:54:04.944      374.90652268    
03 Jan 2024 13:21:05.052    03 Jan 2024 13:29:43.099      518.04682893    
04 Jan 2024 00:57:06.359    04 Jan 2024 01:04:21.907      435.54829324    
04 Jan 2024 02:31:27.024    04 Jan 2024 02:39:45.963      498.93924989    
04 Jan 2024 11:44:34.053    04 Jan 2024 11:50:30.860      356.80764491    
04 Jan 2024 13:17:34.894    04 Jan 2024 13:26:17.783      522.88929097    
05 Jan 2024 00:53:45.390    05 Jan 2024 01:00:45.521      420.13053589    
05 Jan 2024 02:27:57.377    05 Jan 2024 02:36:23.597      506.22034535    
05 Jan 2024 11:41:19.068    05 Jan 2024 11:46:55.993      336.92523037    
05 Jan 2024 13:14:05.211    05 Jan 2024 13:22:52.192      526.98068336    
06 Jan 2024 00:50:25.154    06 Jan 2024 00:57:08.203      403.04964886    
06 Jan 2024 02:24:28.007    06 Jan 2024 02:33:00.761      512.75326826    
06 Jan 2024 11:38:05.246    06 Jan 2024 11:43:20.180      314.93340450    
06 Jan 2024 13:10:35.992    06 Jan 2024 13:19:26.336      530.34360769    
07 Jan 2024 00:47:05.765    07 Jan 2024 00:53:29.837      384.07244843    
07 Jan 2024 02:20:58.904    07 Jan 2024 02:29:37.464      518.55929346    
07 Jan 2024 11:34:52.822    07 Jan 2024 11:39:43.188      290.36655582    
07 Jan 2024 13:07:07.227    07 Jan 2024 13:16:00.224      532.99693958    
08 Jan 2024 00:43:47.377    08 Jan 2024 00:49:50.266      362.88943179    
08 Jan 2024 02:17:30.060    08 Jan 2024 02:26:13.716      523.65585227    
08 Jan 2024 11:31:42.148    08 Jan 2024 11:36:04.666      262.51807543    
08 Jan 2024 13:03:38.908    08 Jan 2024 13:12:33.864      534.95621940    
09 Jan 2024 00:40:30.202    09 Jan 2024 00:46:09.277      339.07433547    
09 Jan 2024 02:14:01.466    09 Jan 2024 02:22:49.523      528.05697127    
09 Jan 2024 11:28:33.810    09 Jan 2024 11:32:24.028      230.21834681    
09 Jan 2024 13:00:11.029    09 Jan 2024 13:09:07.263      536.23395902    
10 Jan 2024 00:37:14.548    10 Jan 2024 00:42:26.559      312.01069008    
10 Jan 2024 02:10:33.118    10 Jan 2024 02:19:24.892      531.77360678    
10 Jan 2024 11:25:28.918    10 Jan 2024 11:28:40.166      191.24792351    
10 Jan 2024 12:56:43.585    10 Jan 2024 13:05:40.424      536.83987475    
11 Jan 2024 00:34:00.890    11 Jan 2024 00:38:41.635      280.74453687    
11 Jan 2024 02:07:05.011    11 Jan 2024 02:15:59.825      534.81389814    
11 Jan 2024 11:22:30.186    11 Jan 2024 11:24:50.368      140.18112175    
11 Jan 2024 12:53:16.572    11 Jan 2024 13:02:13.353      536.78105077    
11 Jan 2024 14:32:15.572    11 Jan 2024 14:33:54.202      98.630290059    
12 Jan 2024 00:30:50.042    12 Jan 2024 00:34:53.687      243.64477174    
12 Jan 2024 02:03:37.144    12 Jan 2024 02:12:34.327      537.18336640    
12 Jan 2024 11:19:52.486    12 Jan 2024 11:20:39.762      47.275521839    
12 Jan 2024 12:49:49.989    12 Jan 2024 12:58:46.051      536.06206798    
12 Jan 2024 14:28:06.642    12 Jan 2024 14:31:03.769      177.12675029    
13 Jan 2024 00:27:43.646    13 Jan 2024 00:31:01.072      197.42677691    
13 Jan 2024 02:00:09.513    13 Jan 2024 02:09:08.398      538.88504446    
13 Jan 2024 03:38:26.419    13 Jan 2024 03:38:53.778      27.358741919    
13 Jan 2024 12:46:23.834    13 Jan 2024 12:55:18.520      534.68506127    
13 Jan 2024 14:24:11.516    13 Jan 2024 14:27:59.755      228.23944957    
14 Jan 2024 00:24:46.314    14 Jan 2024 00:26:59.174      132.86042023    
14 Jan 2024 01:56:42.119    14 Jan 2024 02:05:42.039      539.91956975    
14 Jan 2024 03:34:08.052    14 Jan 2024 03:36:23.980      135.92896719    
14 Jan 2024 12:42:58.108    14 Jan 2024 12:51:50.758      532.64975559    
14 Jan 2024 14:20:22.110    14 Jan 2024 14:24:50.243      268.13253402    
15 Jan 2024 01:53:14.963    15 Jan 2024 02:02:15.248      540.28520565    
15 Jan 2024 03:30:17.341    15 Jan 2024 03:33:26.307      188.96652526    
15 Jan 2024 12:39:32.812    15 Jan 2024 12:48:22.765      529.95346194    
15 Jan 2024 14:16:36.172    15 Jan 2024 14:21:37.483      301.31061390    
"""

valeurs_par_jour_exemple = obtenir_dernier_argument_et_date(tableau_exemple)


# Calcul de la somme par jour
for date, valeurs in valeurs_par_jour_exemple.items():
    somme_jour = sum(valeurs)
    print(f"{date.strftime('%d %b %Y')} : {round(somme_jour/60)} minutes")